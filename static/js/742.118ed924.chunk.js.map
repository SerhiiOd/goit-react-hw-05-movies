{"version":3,"file":"static/js/742.118ed924.chunk.js","mappings":"4RAEaA,EAAYC,EAAAA,EAAAA,IAAH,kEAKTC,EAAWD,EAAAA,EAAAA,IAAH,wK,SCJRE,EAAY,SAAC,GAAqD,IAAnDC,EAAkD,EAAlDA,OAAQC,EAA0C,EAA1CA,MAAOC,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,OAC/D,OACE,UAACT,EAAD,YACE,gBAAKU,IAAKN,EAAQO,IAAKN,EAAOO,MAAM,SACpC,UAACV,EAAD,YACE,0BACGG,EADH,KACYC,EADZ,QAGA,wCAAgBC,EAAhB,QACA,sCACA,uBAAIC,KACJ,oCACA,uBAAIC,SAIX,E,iBChBYI,EAAYZ,EAAAA,EAAAA,OAAH,6WAyBTa,EAAcb,EAAAA,EAAAA,GAAH,mJAUXc,EAAUd,EAAAA,EAAAA,IAAH,yEAMPe,GAAaf,EAAAA,EAAAA,GAAOgB,EAAAA,GAAPhB,CAAH,2rBC/BR,SAASiB,IACtB,OAAwCC,EAAAA,EAAAA,UAAS,CAC/CC,cAAe,GACfX,OAAQ,GACRD,SAAU,GACVa,YAAa,GACbC,aAAc,GACdjB,MAAO,GACPkB,aAAc,KAPhB,eAAOC,EAAP,KAAqBC,EAArB,KASA,GAA4BN,EAAAA,EAAAA,WAAS,GAArC,eAAOO,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACjB,GAA0Cd,EAAAA,EAAAA,UAAS,KAAnD,eAAOe,EAAP,KAAsBC,EAAtB,MAEAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAE+BC,EAAAA,EAAAA,IAAmBT,GAFlD,UAEUJ,EAFV,OAI6C,IAArCc,OAAOC,KAAKf,GAAcgB,OAJlC,0CAKaC,EAAAA,EAAAA,IAAM,mDALnB,OAOIhB,EAAgBD,GAPpB,gDASIkB,QAAQC,IAAR,MATJ,yBAWIhB,GAAU,GAXd,6EADc,uBAAC,WAAD,wBAgBdiB,GAEIZ,EAASa,OAASb,EAASa,MAAMC,MACnCX,EAAiBH,EAASa,MAAMC,KAEnC,GAAE,CAAClB,EAASI,EAASa,QAEtB,IAIQxB,EACNG,EADMH,YAAahB,EACnBmB,EADmBnB,MAAOiB,EAC1BE,EAD0BF,aAAcC,EACxCC,EADwCD,aAAcf,EACtDgB,EADsDhB,SAAUC,EAChEe,EADgEf,OAG5DL,EAASiB,EAAW,yCACYA,GAClC,4DACEf,EAAOgB,EAAayB,MAAM,EAAG,GAC7BxC,EAAOyC,KAAKC,MAAqB,GAAf1B,GAClB2B,EAAczC,EAAO0C,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,MAEzD,OACE,iCACE,6BACE,SAACzC,EAAD,CAAW0C,KAAK,SAASC,QAjBd,WACf1B,EAASI,EACV,EAeK,4CAGCV,IACC,SAACrB,EAAD,CACEE,MAAOA,EACPC,KAAMA,EACNF,OAAQA,EACRG,KAAMA,EACNC,SAAUA,EACVC,OAAQyC,KAIZ,SAACpC,EAAD,sCACA,UAACC,EAAD,YACE,SAACC,EAAD,CAAYyC,GAAG,OAAf,mBACA,SAACzC,EAAD,CAAYyC,GAAG,UAAf,yBAGF,SAAC,EAAAC,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,SAGHlC,IAAU,SAACkC,EAAA,EAAD,MAGhB,C,+LC9FKC,EAAW,gCACXC,EAAU,mCAEHC,EAAmB,mCAAG,oGACVC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,sBAA2C,CAChEI,OAAQ,CACNC,QAASJ,EACTK,SAAU,WAJmB,cAC3BC,EAD2B,yBAQ1BA,EAASC,KAAKC,SARY,2CAAH,qDAWnBjC,EAAkB,mCAAG,WAAMkC,GAAN,uFACTP,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA8BU,GAAM,CACzDN,OAAQ,CACNC,QAASJ,EACTK,SAAU,WAJkB,cAC1BC,EAD0B,yBAQzBA,EAASC,MARgB,2CAAH,sDAWlBG,EAAkB,mCAAG,WAAMD,GAAN,uFACTP,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA8BU,EAA9B,YAA4C,CACjEN,OAAQ,CACNC,QAASJ,EACTK,SAAU,WAJkB,cAC1BC,EAD0B,yBAQzBA,EAASC,KAAKI,MARW,2CAAH,sDAWlBC,EAAkB,mCAAG,WAAMH,GAAN,uFACTP,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA8BU,EAA9B,YAA4C,CACjEN,OAAQ,CACNC,QAASJ,EACTK,SAAU,WAJkB,cAC1BC,EAD0B,yBAQzBA,EAASC,KAAKC,SARW,2CAAH,sDAWlBK,EAAiB,mCAAG,WAAMC,GAAN,uFACRZ,EAAAA,EAAAA,IAAA,UAAaH,EAAb,gBAAqC,CAC1DI,OAAQ,CACNC,QAASJ,EACTK,SAAU,QACVS,MAAOA,KALoB,cACzBR,EADyB,yBASxBA,EAASC,KAAKC,SATU,2CAAH,qD","sources":["components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.jsx","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx","services/moviesAPI.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const CardFilms = styled.div`\n  display: flex;\n  margin-bottom: 25px;\n`;\n\nexport const CardInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  text-align: initial;\n\n  max-width: 450px;\n\n  margin-left: 20px;\n`;\n","import PropTypes from 'prop-types';\nimport { CardFilms, CardInfo } from 'components/MovieCard/MovieCard.styled';\n\nexport const MovieCard = ({ poster, title, year, vote, overview, genres }) => {\n  return (\n    <CardFilms>\n      <img src={poster} alt={title} width=\"250\" />\n      <CardInfo>\n        <h2>\n          {title} ({year})\n        </h2>\n        <p>User Score: {vote}%</p>\n        <h3>Overview</h3>\n        <p>{overview}</p>\n        <h3>Genres</h3>\n        <p>{genres}</p>\n      </CardInfo>\n    </CardFilms>\n  );\n};\n\nMovieCard.propTypes = {\n  poster: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  year: PropTypes.string.isRequired,\n  vote: PropTypes.number.isRequired,\n  overview: PropTypes.string.isRequired,\n  genres: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const BtnRevers = styled.button`\n  font-family: inherit;\n\n  padding: 10px 5px;\n  margin-right: 10px;\n\n  cursor: pointer;\n\n  border-radius: 10px;\n\n  border: none;\n\n  background-image: radial-gradient(\n    circle farthest-corner at 10% 20%,\n    rgba(100, 43, 115, 1) 0%,\n    rgba(4, 0, 4, 1) 90%\n  );\n\n  color: #fff;\n\n  &:hover {\n    color: #ff4500;\n  }\n`;\n\nexport const TitleInform = styled.h3`\n  font-weight: 600;\n  font-size: 24px;\n  line-height: calc(16 / 24);\n\n  text-align: center;\n\n  margin-bottom: 25px;\n`;\n\nexport const LinkBox = styled.div`\n  text-align: center;\n\n  margin-bottom: 25px;\n`;\n\nexport const LinkInform = styled(NavLink)`\n  font-family: 'Permanent Marker', cursive;\n  font-weight: 600;\n  font-size: 24px;\n  line-height: calc(16 / 24);\n\n  text-decoration: none;\n\n  background-color: #4158d0;\n  background-image: linear-gradient(\n    43deg,\n    #4158d0 0%,\n    #c850c0 46%,\n    #ffcc70 100%\n  );\n\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n\n  &:not(:last-child) {\n    margin-right: 100px;\n  }\n\n  &:hover {\n    background-color: #4158d0;\n    background-image: linear-gradient(\n      290deg,\n      #4158d0 0%,\n      #c850c0 46%,\n      #ffcc70 100%\n    );\n\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n  }\n`;\n","import { useState, useEffect, Suspense } from 'react';\nimport { useParams, useLocation, useNavigate, Outlet } from 'react-router-dom';\nimport { toast } from 'react-hot-toast';\nimport { Loader } from 'components/Loader/Loader';\nimport { MovieCard } from 'components/MovieCard/MovieCard';\nimport { fetchDetailsMovies } from 'services/moviesAPI';\nimport {\n  BtnRevers,\n  TitleInform,\n  LinkBox,\n  LinkInform,\n} from './MovieDetails.styled';\n\nexport default function MovieDetails() {\n  const [movieDetails, setMovieDetails] = useState({\n    backdrop_path: '',\n    genres: [],\n    overview: '',\n    poster_path: '',\n    release_date: '',\n    title: '',\n    vote_average: '',\n  });\n  const [loader, setLoader] = useState(true);\n  const { movieId } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [previousRoute, setPreviousRoute] = useState('/');\n\n  useEffect(() => {\n    async function fetchMovieDetails() {\n      try {\n        const movieDetails = await fetchDetailsMovies(movieId);\n\n        if (Object.keys(movieDetails).length === 0) {\n          return toast('Sorry, movie not found! Please try again later');\n        }\n        setMovieDetails(movieDetails);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoader(false);\n      }\n    }\n\n    fetchMovieDetails();\n\n    if (location.state && location.state.from) {\n      setPreviousRoute(location.state.from);\n    }\n  }, [movieId, location.state]);\n\n  const onGoBack = () => {\n    navigate(previousRoute);\n  };\n\n  const { poster_path, title, release_date, vote_average, overview, genres } =\n    movieDetails;\n\n  const poster = poster_path\n    ? `https://image.tmdb.org/t/p/w500${poster_path}`\n    : 'https://via.placeholder.com/200x300?text=Poster+Not+Found';\n  const year = release_date.slice(0, 4);\n  const vote = Math.floor(vote_average * 10);\n  const movieGenres = genres.map(genre => genre.name).join(', ');\n\n  return (\n    <>\n      <main>\n        <BtnRevers type=\"button\" onClick={onGoBack}>\n          Назад\n        </BtnRevers>\n        {movieDetails && (\n          <MovieCard\n            title={title}\n            year={year}\n            poster={poster}\n            vote={vote}\n            overview={overview}\n            genres={movieGenres}\n          />\n        )}\n\n        <TitleInform>Additional information</TitleInform>\n        <LinkBox>\n          <LinkInform to=\"cast\">Cast</LinkInform>\n          <LinkInform to=\"reviews\">Reviews</LinkInform>\n        </LinkBox>\n\n        <Suspense fallback={<Loader />}>\n          <Outlet />\n        </Suspense>\n      </main>\n      {loader && <Loader />}\n    </>\n  );\n}\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'b5ec273f41ed5d13bd669af204d5b017';\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`${BASE_URL}trending/movie/day`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n\n  return response.data.results;\n};\n\nexport const fetchDetailsMovies = async id => {\n  const response = await axios.get(`${BASE_URL}movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n\n  return response.data;\n};\n\nexport const fetchCreditsMovies = async id => {\n  const response = await axios.get(`${BASE_URL}movie/${id}/credits`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n\n  return response.data.cast;\n};\n\nexport const fetchReviewsMovies = async id => {\n  const response = await axios.get(`${BASE_URL}movie/${id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n\n  return response.data.results;\n};\n\nexport const fetchSearchMovies = async query => {\n  const response = await axios.get(`${BASE_URL}search/movie`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n      query: query,\n    },\n  });\n\n  return response.data.results;\n};\n"],"names":["CardFilms","styled","CardInfo","MovieCard","poster","title","year","vote","overview","genres","src","alt","width","BtnRevers","TitleInform","LinkBox","LinkInform","NavLink","MovieDetails","useState","backdrop_path","poster_path","release_date","vote_average","movieDetails","setMovieDetails","loader","setLoader","movieId","useParams","navigate","useNavigate","location","useLocation","previousRoute","setPreviousRoute","useEffect","fetchDetailsMovies","Object","keys","length","toast","console","log","fetchMovieDetails","state","from","slice","Math","floor","movieGenres","map","genre","name","join","type","onClick","to","Suspense","fallback","Loader","BASE_URL","API_KEY","fetchTrendingMovies","axios","params","api_key","language","response","data","results","id","fetchCreditsMovies","cast","fetchReviewsMovies","fetchSearchMovies","query"],"sourceRoot":""}