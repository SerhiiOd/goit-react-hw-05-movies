{"version":3,"file":"static/js/501.b0db27a7.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","components/SearchContainer/SearchContainer.styled.js","components/SearchContainer/SearchContainer.jsx","pages/Movies/Movies.jsx","services/moviesAPI.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ListMovie = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 25px;\n\n  justify-content: center;\n`;\n\nexport const CardLi = styled.li`\n  text-align: center;\n\n  border-radius: 10px;\n\n  background-color: rgba(100, 43, 115, 1);\n  border: 2px solid rgba(100, 43, 115, 1);\n\n  &:hover {\n    transform: scale(1.05);\n  }\n`;\n\nexport const NameFilm = styled.h3`\n  font-family: 'Kablammo', cursive;\n  font-weight: 600;\n  font-size: 24px;\n  line-height: 28px;\n\n  display: inline-block;\n  width: 200px;\n\n  text-decoration: none;\n\n  background-color: #f4d03f;\n  background-image: linear-gradient(132deg, #f4d03f 0%, #16a085 100%);\n\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n\n  &:hover {\n    background-color: #f4d03f;\n    background-image: linear-gradient(315deg, #f4d03f 0%, #16a085 100%);\n\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n  }\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  ListMovie,\n  CardLi,\n  NameFilm,\n} from 'components/MovieList/MovieList.styled';\n\nexport const MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <ListMovie>\n      {movies.map(movie => (\n        <CardLi key={movie.id}>\n          <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n            <img\n              src={\n                movie.poster_path\n                  ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n                  : 'https://via.placeholder.com/278x417?text=Poster+Not+Found'\n              }\n              alt={movie.title}\n              width=\"250\"\n            />\n            <NameFilm>{movie.title}</NameFilm>\n          </Link>\n        </CardLi>\n      ))}\n    </ListMovie>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      poster_path: PropTypes.string,\n      title: PropTypes.string,\n    }).isRequired\n  ).isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const SearchForm = styled.form`\n  padding: 10px;\n  margin-bottom: 20px;\n`;\n\nexport const SearchButton = styled.button`\n  padding: 10px 5px;\n  margin-right: 10px;\n\n  cursor: pointer;\n\n  border-radius: 10px;\n\n  border: none;\n\n  background-image: radial-gradient(\n    circle farthest-corner at 10% 20%,\n    rgba(100, 43, 115, 1) 0%,\n    rgba(4, 0, 4, 1) 90%\n  );\n`;\n\nexport const BtnSpan = styled.span`\n  font-family: 'Lobster', cursive;\n  font-weight: 400;\n  font-size: 20px;\n  line-height: calc(16 / 20);\n\n  background-color: #ffe53b;\n  background-image: linear-gradient(147deg, #ffe53b 0%, #ff2525 74%);\n\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n\n  &:hover {\n    background-color: #ffe53b;\n    background-image: linear-gradient(315deg, #ffe53b 0%, #ff2525 74%);\n\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n  }\n`;\n\nexport const SearchInput = styled.input`\n  padding: 10px 5px;\n\n  border-radius: 10px;\n  outline: none;\n`;\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport {\n  SearchForm,\n  SearchButton,\n  BtnSpan,\n  SearchInput,\n} from 'components/SearchContainer/SearchContainer.styled';\nimport { toast } from 'react-hot-toast';\n\nexport const SearchContainer = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const onFormSubmit = e => {\n    e.preventDefault();\n    const searchQuery = query.toLocaleLowerCase().trim();\n    if (searchQuery === '') {\n      return toast.error(\"It cannot be empty query! Example: 'Batman'!\");\n    }\n    onSubmit(searchQuery);\n    setQuery('');\n  };\n\n  return (\n    <SearchForm onSubmit={onFormSubmit}>\n      <SearchButton type=\"submit\">\n        <BtnSpan>Search</BtnSpan>\n      </SearchButton>\n      <SearchInput\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movies\"\n        value={query}\n        onChange={e => setQuery(e.target.value)}\n      />\n    </SearchForm>\n  );\n};\n\nSearchContainer.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useSearchParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { SearchContainer } from 'components/SearchContainer/SearchContainer';\nimport { toast } from 'react-hot-toast';\nimport { Loader } from 'components/Loader/Loader';\nimport { fetchSearchMovies } from 'services/moviesAPI';\n\nexport default function Movies() {\n  const [movies, setMovies] = useState([]);\n  const [loader, setLoader] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const searchQuery = searchParams.get('query') ?? '';\n\n  const updateQueryString = query => {\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n  };\n\n  useEffect(() => {\n    if (searchQuery === '') {\n      return;\n    }\n\n    async function fechMovies() {\n      try {\n        const movies = await fetchSearchMovies(searchQuery);\n        if (movies.length === 0) {\n          return toast.error('Movie Not Found');\n        }\n        setMovies(movies);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoader(false);\n      }\n    }\n    setLoader(true);\n    fechMovies();\n  }, [searchQuery]);\n\n  return (\n    <>\n      <main>\n        <SearchContainer onSubmit={updateQueryString} />\n        {movies && <MovieList movies={movies} />}\n      </main>\n      {loader && <Loader />}\n    </>\n  );\n}\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'b5ec273f41ed5d13bd669af204d5b017';\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`${BASE_URL}trending/movie/day`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n\n  return response.data.results;\n};\n\nexport const fetchDetailsMovies = async id => {\n  const response = await axios.get(`${BASE_URL}movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n\n  return response.data;\n};\n\nexport const fetchCreditsMovies = async id => {\n  const response = await axios.get(`${BASE_URL}movie/${id}/credits`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n\n  return response.data.cast;\n};\n\nexport const fetchReviewsMovies = async id => {\n  const response = await axios.get(`${BASE_URL}movie/${id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n\n  return response.data.results;\n};\n\nexport const fetchSearchMovies = async query => {\n  const response = await axios.get(`${BASE_URL}search/movie`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n      query: query,\n    },\n  });\n\n  return response.data.results;\n};\n"],"names":["ListMovie","styled","CardLi","NameFilm","MovieList","movies","location","useLocation","map","movie","to","id","state","from","src","poster_path","alt","title","width","SearchForm","SearchButton","BtnSpan","SearchInput","SearchContainer","onSubmit","useState","query","setQuery","e","preventDefault","searchQuery","toLocaleLowerCase","trim","toast","type","autoComplete","autoFocus","placeholder","value","onChange","target","Movies","setMovies","loader","setLoader","useSearchParams","searchParams","setSearchParams","get","useEffect","fetchSearchMovies","length","console","log","fechMovies","Loader","BASE_URL","API_KEY","fetchTrendingMovies","axios","params","api_key","language","response","data","results","fetchDetailsMovies","fetchCreditsMovies","cast","fetchReviewsMovies"],"sourceRoot":""}