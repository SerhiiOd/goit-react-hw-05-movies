{"version":3,"file":"static/js/387.a59d9ac7.chunk.js","mappings":"wPAEaA,E,OAASC,EAAAA,GAAH,0G,mCCKJ,SAASC,IACtB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,WAAS,GAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA4BJ,EAAAA,EAAAA,WAAS,GAArC,eAAOK,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAoBR,OAlBAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAEwBC,EAAAA,EAAAA,IAAmBH,GAF3C,UAGyB,KADfN,EAFV,QAGcU,OAHd,uBAIMP,GAAS,GAJf,mBAKaQ,EAAAA,EAAAA,IAAM,sDALnB,OAOIV,EAASD,GAPb,kDASIY,QAAQC,IAAR,MATJ,yBAWIR,GAAU,GAXd,8EADc,uBAAC,WAAD,wBAedS,EACD,GAAE,CAACR,KAGF,gCACGN,IACC,SAACJ,EAAD,UACGI,EAAMe,KAAI,SAAAC,GAAI,OACb,2BACE,gBACEC,IACED,EAAKE,aAAL,yCACsCF,EAAKE,cACvC,2DAENC,IAAKH,EAAKI,KACVC,MAAM,SAER,wBAAKL,EAAKI,QACV,uCAAeJ,EAAKM,eAXbN,EAAKO,QADD,MAiBlBrB,IAAS,8DACTE,IAAU,SAACoB,EAAA,EAAD,MAGhB,C,+LCtDKC,EAAW,gCACXC,EAAU,mCAEHC,EAAmB,mCAAG,oGACVC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,sBAA2C,CAChEI,OAAQ,CACNC,QAASJ,EACTK,SAAU,WAJmB,cAC3BC,EAD2B,yBAQ1BA,EAASC,KAAKC,SARY,2CAAH,qDAWnBC,EAAkB,mCAAG,WAAMC,GAAN,uFACTR,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA8BW,GAAM,CACzDP,OAAQ,CACNC,QAASJ,EACTK,SAAU,WAJkB,cAC1BC,EAD0B,yBAQzBA,EAASC,MARgB,2CAAH,sDAWlBxB,EAAkB,mCAAG,WAAM2B,GAAN,uFACTR,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA8BW,EAA9B,YAA4C,CACjEP,OAAQ,CACNC,QAASJ,EACTK,SAAU,WAJkB,cAC1BC,EAD0B,yBAQzBA,EAASC,KAAKjB,MARW,2CAAH,sDAWlBqB,EAAkB,mCAAG,WAAMD,GAAN,uFACTR,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA8BW,EAA9B,YAA4C,CACjEP,OAAQ,CACNC,QAASJ,EACTK,SAAU,WAJkB,cAC1BC,EAD0B,yBAQzBA,EAASC,KAAKC,SARW,2CAAH,sDAWlBI,EAAiB,mCAAG,WAAMC,GAAN,uFACRX,EAAAA,EAAAA,IAAA,UAAaH,EAAb,gBAAqC,CAC1DI,OAAQ,CACNC,QAASJ,EACTK,SAAU,QACVQ,MAAOA,KALoB,cACzBP,EADyB,yBASxBA,EAASC,KAAKC,SATU,2CAAH,qD","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","services/moviesAPI.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ListUl = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n\n  gap: 25px;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { ListUl } from 'components/Cast/Cast.styled';\nimport { Loader } from 'components/Loader/Loader';\nimport { toast } from 'react-hot-toast';\nimport { fetchCreditsMovies } from 'services/moviesAPI';\n\nexport default function Cast() {\n  const [casts, setCasts] = useState([]);\n  const [error, setError] = useState(false);\n  const [loader, setLoader] = useState(true);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function fetchCasts() {\n      try {\n        const casts = await fetchCreditsMovies(movieId);\n        if (casts.length === 0) {\n          setError(true);\n          return toast('Ooops, there are no cast! Please, try again later');\n        }\n        setCasts(casts);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoader(false);\n      }\n    }\n    fetchCasts();\n  }, [movieId]);\n\n  return (\n    <>\n      {casts && (\n        <ListUl>\n          {casts.map(cast => (\n            <li key={cast.cast_id}>\n              <img\n                src={\n                  cast.profile_path\n                    ? `https://image.tmdb.org/t/p/w500${cast.profile_path}`\n                    : 'https://via.placeholder.com/100x150?text=Photo+Not+Found'\n                }\n                alt={cast.name}\n                width=\"100\"\n              />\n              <h4>{cast.name}</h4>\n              <p>Character: {cast.character}</p>\n            </li>\n          ))}\n        </ListUl>\n      )}\n      {error && <p>We don't have cast for this movie </p>}\n      {loader && <Loader />}\n    </>\n  );\n}\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'b5ec273f41ed5d13bd669af204d5b017';\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`${BASE_URL}trending/movie/day`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n\n  return response.data.results;\n};\n\nexport const fetchDetailsMovies = async id => {\n  const response = await axios.get(`${BASE_URL}movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n\n  return response.data;\n};\n\nexport const fetchCreditsMovies = async id => {\n  const response = await axios.get(`${BASE_URL}movie/${id}/credits`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n\n  return response.data.cast;\n};\n\nexport const fetchReviewsMovies = async id => {\n  const response = await axios.get(`${BASE_URL}movie/${id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n\n  return response.data.results;\n};\n\nexport const fetchSearchMovies = async query => {\n  const response = await axios.get(`${BASE_URL}search/movie`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n      query: query,\n    },\n  });\n\n  return response.data.results;\n};\n"],"names":["ListUl","styled","Cast","useState","casts","setCasts","error","setError","loader","setLoader","movieId","useParams","useEffect","fetchCreditsMovies","length","toast","console","log","fetchCasts","map","cast","src","profile_path","alt","name","width","character","cast_id","Loader","BASE_URL","API_KEY","fetchTrendingMovies","axios","params","api_key","language","response","data","results","fetchDetailsMovies","id","fetchReviewsMovies","fetchSearchMovies","query"],"sourceRoot":""}